name: Laravel-Lint

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: devops_test
        ports:
          - 3308:3308
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

#      - name: Set up PHP
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: '8.2'  # Specify the PHP version you're using

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Stop and remove existing containers
        run: |
          docker-compose down || true
          docker container prune -f
          docker network prune -f
          docker volume prune -f

      - name: Build and push Docker images
        run: docker-compose build

      - name: Start Docker containers
        run: docker-compose up -d

      - name: Run Composer install
        run: docker-compose exec -T app composer install

      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Run migrations
        run: docker-compose exec -T app php artisan migrate

#      - name: Install Composer dependencies
#        run: composer install --no-progress --no-suggest --prefer-dist

      - name: Run PHP CS Fixer
        id: php-cs-fixer
        run: vendor/bin/php-cs-fixer fix --dry-run --diff || true

      - name: Check PHP CS Fixer exit code
        if: steps.php-cs-fixer.outputs.exit_code == 8
        run: exit 1
        continue-on-error: false

      - name: Run PHPStan
        run: vendor/bin/phpstan analyse app tests

      - name: Run tests
        run: docker-compose exec -T app php vendor/bin/phpunit

      - name: Shut down Docker containers
        if: always()
        run: docker-compose down

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'  # Specify the Node.js version you're using

      - name: Cache npm modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install npm dependencies
        run: npm install


